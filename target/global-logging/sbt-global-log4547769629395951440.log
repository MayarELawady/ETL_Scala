[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\ahmed\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\ahmed\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.2 (Oracle Corporation Java 1.8.0_202)
[debug]       Load.loadUnit: plugins took 104.2751ms
[debug]       Load.loadUnit: defsScala took 0.2502ms
[debug] [Loading] Scanning directory C:\Users\ahmed\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\ahmed\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 20.2763 ms
[debug]           Load.resolveProject(global-plugins) took 67.5063ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\ahmed\.sbt\1.0\plugins, plugins: List(<none>))) took 117.7417ms
[debug] [Loading] Done in C:\Users\ahmed\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 138.3657ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.4849ms
[debug]     Load.loadUnit(file:/C:/Users/ahmed/.sbt/1.0/plugins/, ...) took 252.0045ms
[debug]   Load.apply: load took 511.5919ms
[debug]   Load.apply: resolveProjects took 8.1856ms
[debug]   Load.apply: finalTransforms took 69.0475ms
[debug]   Load.apply: config.delegates took 8.6987ms
[debug]   Load.apply: Def.make(settings)... took 552.5623ms
[debug]   Load.apply: structureIndex took 101.508ms
[debug]   Load.apply: mkStreams took 1.5072ms
[info] loading global plugins from C:\Users\ahmed\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 23981.5485ms
[debug]           Load.loadUnit: plugins took 42.9012ms
[debug]           Load.loadUnit: defsScala took 0.0032ms
[debug] [Loading] Scanning directory C:\Users\ahmed\IdeaProjects\ETL_Final\project
[debug]             Load.loadUnit: mkEval took 15.4773ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\ahmed\IdeaProjects\ETL_Final\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.6529 ms
[info] loading settings for project etl_final-build from idea.sbt ...
[debug]               Load.resolveProject(etl_final-build) took 8.8423ms
[debug]             Load.loadTransitive: finalizeProject(Project(id etl_final-build, base: C:\Users\ahmed\IdeaProjects\ETL_Final\project, plugins: List(<none>))) took 11.0711ms
[debug] [Loading] Done in C:\Users\ahmed\IdeaProjects\ETL_Final\project, returning: (etl_final-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2322.208ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.4163ms
[debug]         Load.loadUnit(file:/C:/Users/ahmed/IdeaProjects/ETL_Final/project/, ...) took 2370.7729ms
[debug]       Load.apply: load took 2372.2283ms
[debug]       Load.apply: resolveProjects took 0.1202ms
[debug]       Load.apply: finalTransforms took 6.6155ms
[debug]       Load.apply: config.delegates took 0.3259ms
[debug]       Load.apply: Def.make(settings)... took 100.5247ms
[debug]       Load.apply: structureIndex took 24.3227ms
[debug]       Load.apply: mkStreams took 0.0032ms
[info] loading project definition from C:\Users\ahmed\IdeaProjects\ETL_Final\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 3833.4007ms
[debug]     Load.loadUnit: defsScala took 0.0032ms
[debug] [Loading] Scanning directory C:\Users\ahmed\IdeaProjects\ETL_Final
[debug]       Load.loadUnit: mkEval took 0.4102ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.0767 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 42.467ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\ahmed\IdeaProjects\ETL_Final, plugins: List(<none>))) took 46.4203ms
[debug] [Loading] Done in C:\Users\ahmed\IdeaProjects\ETL_Final, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1035.1159ms
[debug]     Load.loadUnit: cleanEvalClasses took 8.8233ms
[debug]   Load.loadUnit(file:/C:/Users/ahmed/IdeaProjects/ETL_Final/, ...) took 4878.8299ms
[debug] Load.apply: load took 4881.1014ms
[debug] Load.apply: resolveProjects took 0.136ms
[debug] Load.apply: finalTransforms took 31.2711ms
[debug] Load.apply: config.delegates took 0.5529ms
[debug] Load.apply: Def.make(settings)... took 121.778ms
[debug] Load.apply: structureIndex took 25.5946ms
[debug] Load.apply: mkStreams took 0.0039ms
[info] set current project to ETL_Final (in build file:/C:/Users/ahmed/IdeaProjects/ETL_Final/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 63929 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 63929, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to ETL_Final (in build file:/C:/Users/ahmed/IdeaProjects/ETL_Final/)
[debug] > Exec(idea-shell, None, None)
